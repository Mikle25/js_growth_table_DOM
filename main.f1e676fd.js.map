{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","appendRow","removeRow","appendColumn","removeColumn","maxTable","minTable","currentSizeColumn","firstChild","querySelectorAll","length","currentSizeRow","addEventListener","addRow","disabled","appendChild","lastElementChild","cloneNode","addColumn","children","forEach","tr","append","remRow","removeChild","remColumn"],"mappings":";AAAA,aAEA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAC,WACOA,IAAAA,EAAQC,SAASC,cAAc,gBAC/BC,EAAYF,SAASC,cAAc,eACnCE,EAAYH,SAASC,cAAc,eACnCG,EAAeJ,SAASC,cAAc,kBACtCI,EAAeL,SAASC,cAAc,kBAEtCK,EAAW,EACXC,EAAW,EACbC,EAAoBT,EAAMU,WAAWC,iBAAiB,MAAMC,OAC5DC,EAAiBb,EAAMW,iBAAiB,MAAMC,OAElDT,EAAUW,iBAAiB,QAKlBC,WACPX,EAAUY,UAAW,EAEjBH,IAAmBN,IACrBJ,EAAUa,UAAW,GAGvBhB,EAAMiB,YAAYjB,EAAMkB,iBAAiBC,WAAU,IACnDN,MAZFR,EAAaS,iBAAiB,QAerBM,WACPd,EAAaU,UAAW,EAEpBP,IAAsBF,IACxBF,EAAaW,UAAW,GAGtBhB,EAAAA,EAAMqB,UAAUC,QAAQ,SAAAC,GAC1BA,EAAGC,OAAOD,EAAGL,iBAAiBC,WAAU,MAE1CV,MAxBFL,EAAUU,iBAAiB,QA2BlBW,WACPtB,EAAUa,UAAW,EAEjBH,GAAkBL,IACpBJ,EAAUY,UAAW,GAGvBhB,EAAM0B,YAAY1B,EAAME,cAAc,OACtCW,MAlCFP,EAAaQ,iBAAiB,QAqCrBa,WACPtB,EAAaW,UAAW,EAEpBP,GAAqBD,IACvBF,EAAaU,UAAW,GAGtBhB,EAAAA,EAAMqB,UAAUC,QAAQ,SAAAC,GAC1BA,EAAGG,YAAYH,EAAGrB,cAAc,SAGlCO,MA/DH","file":"main.f1e676fd.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n(function() {\n  const table = document.querySelector('.field tbody');\n  const appendRow = document.querySelector('.append-row');\n  const removeRow = document.querySelector('.remove-row');\n  const appendColumn = document.querySelector('.append-column');\n  const removeColumn = document.querySelector('.remove-column');\n\n  const maxTable = 9;\n  const minTable = 3;\n  let currentSizeColumn = table.firstChild.querySelectorAll('td').length;\n  let currentSizeRow = table.querySelectorAll('tr').length;\n\n  appendRow.addEventListener('click', addRow);\n  appendColumn.addEventListener('click', addColumn);\n  removeRow.addEventListener('click', remRow);\n  removeColumn.addEventListener('click', remColumn);\n\n  function addRow() {\n    removeRow.disabled = false;\n\n    if (currentSizeRow === maxTable) {\n      appendRow.disabled = true;\n    }\n\n    table.appendChild(table.lastElementChild.cloneNode(true));\n    currentSizeRow++;\n  }\n\n  function addColumn() {\n    removeColumn.disabled = false;\n\n    if (currentSizeColumn === maxTable) {\n      appendColumn.disabled = true;\n    }\n\n    [...table.children].forEach(tr => {\n      tr.append(tr.lastElementChild.cloneNode(true));\n    });\n    currentSizeColumn++;\n  }\n\n  function remRow() {\n    appendRow.disabled = false;\n\n    if (currentSizeRow <= minTable) {\n      removeRow.disabled = true;\n    }\n\n    table.removeChild(table.querySelector('tr'));\n    currentSizeRow--;\n  }\n\n  function remColumn() {\n    appendColumn.disabled = false;\n\n    if (currentSizeColumn <= minTable) {\n      removeColumn.disabled = true;\n    }\n\n    [...table.children].forEach(tr => {\n      tr.removeChild(tr.querySelector('td'));\n    });\n\n    currentSizeColumn--;\n  }\n}());\n"]}